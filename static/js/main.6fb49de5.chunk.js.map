{"version":3,"sources":["components/OptionCategory.jsx","components/FlipCard.jsx","components/SingleCard.jsx","components/CardList.jsx","App.js","reportWebVitals.js","index.js"],"names":["OptionCategory","changeGif","option","id","onChange","e","target","value","FlipCard","children","number","useState","isActive","setIsActive","num","today","Date","getDate","className","onClick","preventDefault","SingleCard","props","images","title","src","downsized_medium","url","CardList","gifList","setGifList","setOption","useEffect","localStorage","category","JSON","parse","console","log","fetchGifList","setItem","stringify","fetch","process","then","res","json","result","data","newGif","map","item","index","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAEe,SAASA,EAAT,GAA8C,IAArBC,EAAoB,EAApBA,UAAWC,EAAS,EAATA,OAC/C,OACI,gCACH,sDACD,yBAAQC,GAAK,WAAWC,SAAU,SAACC,GAAD,OAAMJ,EAAUI,EAAEC,OAAOC,QAAQA,MAAOL,EAA1E,UACA,wBAAQK,MAAM,QAAd,mBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,6BCVW,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,OAAS,EAEjBC,oBAAS,GAFQ,mBAE1CC,EAF0C,KAEhCC,EAFgC,KAG7CC,EAAMJ,EAAS,EACfK,GAAQ,IAAIC,MAAOC,UAavB,OAEA,qBAAKC,UAAS,sBAAiBN,EAAW,OAAS,IACjDO,QAbkB,SAACd,GAEnB,GADAA,EAAEe,mBACCN,GAAOC,GAIR,OAAO,EAHPF,GAAaD,IASjB,SAGGH,ICrBQ,SAASY,EAAT,GAAyD,IAAD,IAAlCC,MAAQC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,MAASd,EAAS,EAATA,OAC1D,OAGI,eAACF,EAAD,CAAUE,OAAQA,EAAlB,UACI,qBAAKQ,UAAU,aAAf,SACA,qBAAKA,UAAU,SAAf,SACA,6BAAKR,EAAQ,QAGb,sBAAKQ,UAAU,YAAf,UACA,6BAAKM,IACL,qBAAKN,UAAU,cAAf,SACA,qBAAKO,IAAKF,EAAOG,iBAAiBC,cCX/B,SAASC,IAAY,IAAD,EAEHjB,mBAAS,IAFN,mBAE1BkB,EAF0B,KAEjBC,EAFiB,OAGLnB,mBAAS,SAHJ,mBAG1BT,EAH0B,KAGlB6B,EAHkB,KAM3BC,qBAAU,WACN,GAAGC,aAAaC,SAAS,CACrB,IAAMA,EAAWC,KAAKC,MAAMH,aAAaC,UACzCH,EAAUG,GACVG,QAAQC,IAAIJ,GACZK,SAGAN,aAAaO,QAAQ,WAAYL,KAAKM,UAAUvC,IAChDqC,MAEL,CAACrC,IAMF,SAASqC,IACPG,MAAM,0CAAD,OAA2CxC,EAA3C,oBApBGyC,mCAoBH,cACJC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACFV,QAAQC,IAAIS,EAAOC,MACnBlB,EAAWiB,EAAOC,SAI9B,OACC,sBAAK9B,UAAU,oBAAf,UACA,sBAAKA,UAAU,gBAAf,UACD,qBAAIA,UAAU,QAAd,UAAuBhB,GAAUA,EAAjC,UACA,oBAAIgB,UAAU,YAAd,gCAEI,cAAClB,EAAD,CAAgBE,OAAQA,EAAQD,UAnBd,SAACgD,GACfhB,aAAaO,QAAQ,WAAYL,KAAKM,UAAUQ,IAChDlB,EAAUkB,MAkBV,qBAAK/B,UAAU,eAAf,SACKW,GAAWA,EAAQqB,KAAI,SAACC,EAAMC,GAC3B,OACI,8BACA,cAAC/B,EAAD,CAAYC,MAAO6B,EAAMzC,OAAQ0C,KADvBA,W,oBCjCnBC,MATf,WACE,OACE,sBAAKnC,UAAU,cAAf,UACE,cAAC,IAAD,IACA,cAACU,EAAD,QCGS0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6fb49de5.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function OptionCategory({changeGif, option}) {\n    return (\n        <div>\n     <label>Select Category: </label>\n    <select id = \"dropdown\" onChange={(e)=> changeGif(e.target.value)} value={option}>\n    <option value=\"funny\" >Funny</option>\n    <option value=\"cat\">Cat</option>\n    <option value=\"dog\">Dog</option>\n    <option value=\"meme\">Meme</option>\n    <option value=\"disney\">Disney</option>\n    <option value=\"christmas\">Christmas</option>\n    </select>\n        </div>\n    )\n}\n\n","import React, {useState} from 'react'\n\nexport default function FlipCard({children, number}) {\n\n    const [isActive, setIsActive] = useState(false);\n    let num = number + 1;\n    let today = new Date().getDate();\n    \n\n    const handleClick = (e) => {\n      e.preventDefault();\n      if(num <= today){\n        setIsActive(!isActive);\n      }\n      else{\n        return false;\n      }\n    };\n  \n    return (\n        \n    <div className={`single-card ${isActive ? \"flip\" : \"\"}`}\n      onClick={handleClick}\n    >\n      {children}\n    </div>\n    )\n}\n","import React from 'react'\nimport FlipCard from './FlipCard';\n\nexport default function SingleCard({ props: {images, title }, number}) {\n    return (\n\n\n        <FlipCard number={number}> \n            <div className=\"card-front\">\n            <div className=\"circle\">\n            <h2>{number +1 }</h2>\n            </div>\n            </div>\n            <div className=\"card-back\">\n            <h3>{title}</h3>\n            <div className=\"img-wrapper\">\n            <img src={images.downsized_medium.url}/>\n            </div>\n            </div>\n        </FlipCard>\n    )\n}\n","import React, {useState, useEffect} from 'react'\nimport OptionCategory from './OptionCategory';\nimport SingleCard from './SingleCard';\n\n\nexport default function CardList() {\n\n    let [gifList, setGifList] = useState([])\n    let [option, setOption] = useState(\"funny\");\n    const API_KEY = process.env.REACT_APP_GIF_API_KEY;\n\n        useEffect(()=> {\n            if(localStorage.category){\n                const category = JSON.parse(localStorage.category);\n                setOption(category);\n                console.log(category);\n                fetchGifList()\n            }\n            else{\n                localStorage.setItem(\"category\", JSON.stringify(option))\n                fetchGifList()\n            }\n        }, [option])\n    \n        const changeGif = (newGif) => {\n            localStorage.setItem(\"category\", JSON.stringify(newGif))\n            setOption(newGif) \n          }\n          function fetchGifList(){\n            fetch(`https://api.giphy.com/v1/gifs/search?q=${option}&api_key=${API_KEY}&limit=24`)\n            .then(res => res.json()) \n            .then(result => {\n                console.log(result.data);\n                setGifList(result.data)\n            });\t\n            }\n\n    return (\n     <div className=\"container-wrapper\">\n     <div className=\"title-wrapper\">\n    <h1 className=\"title\">{option && option} Gif</h1>\n    <h2 className=\"sub-title\">Advent Calendar</h2>\n    </div>\n        <OptionCategory option={option} changeGif={changeGif}/>\n            <div className=\"card-wrapper\">\n                {gifList && gifList.map((item, index) => {\n                    return (\n                        <div key={index}>\n                        <SingleCard props={item} number={index}/> \n                        </div>      \n                    )\n                })}\n            </div>\n        </div>\n    )\n}\n","\nimport './App.scss';\nimport CardList from './components/CardList';\nimport SnowStorm from 'react-snowstorm';\n\nfunction App() {\n  return (\n    <div className=\"app-wrapper\">\n      <SnowStorm/>\n      <CardList/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}